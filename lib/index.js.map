{"version":3,"sources":["../src/index.js"],"names":["Component","name","version","IconComponent","text","description","isInlineable","handleRemoveHotKey","_","__","Promise","reject","handleFocusPreviousHotKey","handleFocusNextHotKey","handleFocus","props","source","ref","setTimeout","focus"],"mappings":";;;;;;AAEA;;;;AACA;;;;AACA;;;;;;kBAGe;AACbA,gCADa;AAEbC,QAAM,+BAFO;AAGbC,WAAS,OAHI;AAIbC,iBAAe,wDAJF;AAKbC,QAAM,OALO;AAMbC,eAAa,uCANA;AAObC,gBAAc,IAPD;;AASbC,sBAAoB,4BAACC,CAAD,EAAWC,EAAX;AAAA,WAClBC,QAAQC,MAAR,EADkB;AAAA,GATP;AAWbC,6BAA2B,mCACzBJ,CADyB,EAEzBC,EAFyB;AAAA,WAGVC,QAAQC,MAAR,EAHU;AAAA,GAXd;AAebE,yBAAuB,+BAACL,CAAD,EAAWC,EAAX;AAAA,WACrBC,QAAQC,MAAR,EADqB;AAAA,GAfV;;AAkBb;AACA;AACA;AACAG,eAAa,qBAACC,KAAD,EAAaC,MAAb,EAA0BC,GAA1B,EAA+C;AAC1D,QAAI,CAACA,GAAL,EAAU;AACR;AACD;AACDC,eAAW;AAAA,aAAMD,IAAIE,KAAJ,EAAN;AAAA,KAAX;AACD;AA1BY,C;AANf","file":"index.js","sourcesContent":["// @flow\n/* eslint-disable no-duplicate-imports */\nimport React from 'react'\nimport Component from './Component'\nimport PlayArrow from 'material-ui/svg-icons/av/play-arrow'\nimport type { ContentPluginProps } from 'ory-editor-core/lib/service/plugin/classes'\n\nexport default {\n  Component,\n  name: 'ory/editor/core/content/video',\n  version: '0.0.1',\n  IconComponent: <PlayArrow />,\n  text: 'Video',\n  description: 'Include videos from Vimeo or YouTube.',\n  isInlineable: true,\n\n  handleRemoveHotKey: (_: Event, __: ContentPluginProps<*>): Promise<*> =>\n    Promise.reject(),\n  handleFocusPreviousHotKey: (\n    _: Event,\n    __: ContentPluginProps<*>\n  ): Promise<*> => Promise.reject(),\n  handleFocusNextHotKey: (_: Event, __: ContentPluginProps<*>): Promise<*> =>\n    Promise.reject(),\n\n  // We need this because otherwise we lose hotkey focus on elements like spoilers.\n  // This could probably be solved in an easier way by listening to window.document?\n  //\n  handleFocus: (props: any, source: any, ref: HTMLElement) => {\n    if (!ref) {\n      return\n    }\n    setTimeout(() => ref.focus())\n  }\n}\n"]}